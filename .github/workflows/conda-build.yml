---
name: Conda Build & Upload

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        python-version: [3.11]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-variant: Miniforge3  # <-- switch from Mambaforge
          use-mamba: true
          activate-environment: build-env
          auto-update-conda: true
          auto-activate-base: true
          remove-profiles: true
          conda-solver: libmamba
          clean-patched-environment-file: true
          run-post: true

      - name: Install build tools and build recipe
        run: |
          conda run -n build-env --no-capture-output mamba install -c conda-forge conda-build anaconda-client conda-verify -y
          conda run -n build-env --no-capture-output mamba build conda-recipe --python ${{ matrix.python-version }}

#      - name: Upload to Anaconda (Unix)
#        if: runner.os != 'Windows' && github.ref == 'refs/heads/main'
#        env:
#          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
#        run: |
#          echo "Getting build output path..."
#          BUILT_PACKAGE=$(conda run -n build-env conda build conda-recipe --python ${{ matrix.python-version }} --output)
#          echo "Uploading: $BUILT_PACKAGE"
#          conda run -n build-env anaconda -t $ANACONDA_API_TOKEN upload --user jwbear --force "$BUILT_PACKAGE"
#
#      - name: Upload to Anaconda (Windows)
#        if: runner.os == 'Windows' && github.ref == 'refs/heads/main'
#        env:
#          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
#        shell: pwsh
#        run: |
#          Write-Output "Setting up Conda environment..."
#          $env:Path += ";C:\Miniconda\Scripts;C:\Miniconda;C:\Miniconda\Library\bin"
#          conda init powershell
#          & $env:USERPROFILE\Documents\WindowsPowerShell\profile.ps1  # Load conda if needed
#          conda activate build-env
#
#          Write-Output "Getting build output path..."
#          $BUILT_PACKAGE = conda build conda-recipe --python ${{ matrix.python-version }} --output
#
#          Write-Output "Uploading: $BUILT_PACKAGE"
#          anaconda -t $env:ANACONDA_API_TOKEN upload --user jwbear --force $BUILT_PACKAGE
