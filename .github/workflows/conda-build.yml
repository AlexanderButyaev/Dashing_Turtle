---
name: Conda Build & Upload

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.9]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Patch requirements.txt to remove mariadb on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sed -i '/^mariadb[<>= ]*/d' requirements.txt

      - name: Install APT dependencies (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt install -y libmariadb3 libmariadb-dev
          sudo apt install -y python3 python3-pip
          sudo apt install -y python3-mysqldb 
          pip3 install mariadb

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: build-env
          channels: conda-forge, bioconda
          python-version: ${{ matrix.python-version }}
          use-only-tar-bz2: true

      - name: Set channel priority
        run: |
          conda config --add channels conda-forge
          conda config --add channels defaults
          conda config --set channel_priority strict

      - name: Create conda build environment
        run: conda create -n build-env python=${{ matrix.python-version }} -y

      - name: Install build dependencies
        run: conda install -n build-env -c conda-forge conda-build anaconda-client conda-verify libarchive -y

      - name: Conditionally install pyqt6 on Linux
        if: runner.os == 'Linux'
        shell: bash
        run: |
          source $CONDA/etc/profile.d/conda.sh
          conda activate build-env
          conda install -y pyqt6

      - name: Conditionally install pyqt6 on macOS (x86_64 only)
        if: runner.os == 'macOS'
        shell: bash
        run: |
          source $CONDA/etc/profile.d/conda.sh
          conda activate build-env
          if [[ "$(uname -m)" != "arm64" ]]; then
            conda install -y pyqt6
          else
            pip install --no-index --find-links=$SRC_DIR/conda-recipe/wheels PyQt6 PyQt6-sip PyQt6-Qt6
          fi

      - name: Install pyqt6 on Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          conda activate build-env
          conda install -y pyqt6
      - name: Build Conda package
        run: |
          conda config --set anaconda_upload no
          conda run -n build-env conda build conda-recipe --python ${{ matrix.python-version }}

      - name: Upload to Anaconda (Unix)
        if: runner.os != 'Windows' && github.ref == 'refs/heads/main'
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          echo "Getting build output path..."
          BUILT_PACKAGE=$(conda build conda-recipe --python ${{ matrix.python-version }} --output)
          echo "Uploading: $BUILT_PACKAGE"
          anaconda -t $ANACONDA_API_TOKEN upload --user jwbear --force "$BUILT_PACKAGE"

      - name: Upload to Anaconda (Windows)
        if: runner.os == 'Windows' && github.ref == 'refs/heads/main'
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        shell: pwsh
        run: |
          Write-Output "Setting up Conda environment..."
          $env:Path += ";C:\Miniconda\Scripts;C:\Miniconda;C:\Miniconda\Library\bin"
          conda init powershell
          & $env:USERPROFILE\Documents\WindowsPowerShell\profile.ps1  # Load conda if needed
          conda activate build-env

          Write-Output "Getting build output path..."
          $BUILT_PACKAGE = conda build conda-recipe --python ${{ matrix.python-version }} --output

          Write-Output "Uploading: $BUILT_PACKAGE"
          anaconda -t $env:ANACONDA_API_TOKEN upload --user jwbear --force $BUILT_PACKAGE
